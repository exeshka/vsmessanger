// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum MessageStatus {
  SENT // Сообщение отправлено
  READ // Сообщение прочитано
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  images    Image[]
  chats     Chat[]    @relation("ChatMembers") // Чаты пользователя
  Message   Message[]
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  hash      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Chat {
  id        String    @id
  type      ChatType  @default(DIRECT)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[] // Сообщения в чате
  members   User[]    @relation("ChatMembers") // Участники чата
}

model Message {
  id          String             @id @default(cuid())
  content     String
  contentType MessageContentType @default(TEXT)
  status      MessageStatus      @default(SENT)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  chat        Chat               @relation(fields: [chatId], references: [id])
  chatId      String
  sender      User               @relation(fields: [senderId], references: [id])
  senderId    String
}

enum ChatType {
  DIRECT // Личный чат между двумя пользователями
}

enum MessageContentType {
  TEXT // Текстовое сообщение
  IMAGE // Сообщение с изображением
}
